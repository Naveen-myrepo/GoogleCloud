Objective
The objective of this challenge lab is for you to demonstrate proficiency in integrating Search in applications with Vertex AI Agent Builder, showcasing your ability to design and implement a comprehensive solution that combines powerful search capabilities and a virtual assistant to enhance the user experience.

Setup
Qwiklabs setup
For each lab, you get a new Google Cloud project and set of resources for a fixed time at no cost.

Make sure you signed into Qwiklabs using an incognito window.

Note the lab's access time (for example, img/time.png and make sure you can finish in that time block.

There is no pause feature. You can restart if needed, but you have to start at the beginning.


When ready, click img/start_lab.png.

Note your lab credentials. You will use them to sign in to the Google Cloud Console. img/open_google_console.png

Click Open Google Console.

Click Use another account and copy/paste credentials for this lab into the prompts.

If you use other credentials, you'll get errors or incur charges.

Accept the terms and skip the recovery resource page.
Do not click End Lab unless you are finished with the lab or want to restart it. This clears your work and removes the project.

Activate Cloud Shell
Cloud Shell is a virtual machine that is loaded with development tools. It offers a persistent 5GB home directory and runs on the Google Cloud. Cloud Shell provides command-line access to your Google Cloud resources.

In the Cloud Console, in the top right toolbar, click the Activate Cloud Shell button.

Cloud Shell icon

Click Continue.

cloudshell_continue.png

It takes a few moments to provision and connect to the environment. When you are connected, you are already authenticated, and the project is set to your PROJECT_ID. For example:

Cloud Shell Terminal

gcloud is the command-line tool for Google Cloud. It comes pre-installed on Cloud Shell and supports tab-completion.

You can list the active account name with this command:

gcloud auth list
Copied!
(Output)

Credentialed accounts:
 - <myaccount>@<mydomain>.com (active)
(Example output)

Credentialed accounts:
 - google1623327_student@qwiklabs.net
You can list the project ID with this command:

gcloud config list project
Copied!
(Output)

[core]
project = <project_ID>
(Example output)

[core]
project = qwiklabs-gcp-44776a13dea667a6
For full documentation of gcloud see the gcloud command-line tool overview.
Challenge Scenario
cymbal_shops.png

Here is a company overview as provided on the Cymbal Shops’s website.

Cymbal Shops is an American retail chain headquartered in Minneapolis that sells homeware, electronics, and clothing.

Founded in 1974, Cymbal Shops started out as Cymbal Air, selling AC systems manufactured by Cymbal Group in Minnesota and neighboring states. The company quickly expanded into domestic merchandise in order to satisfy the need for quality products at an affordable price in the midst of a recession.

Cymbal Shops’ broad product assortment was once a benefit - capturing planned purchases and last minute splurges. In recent years, however, the company has struggled to adapt to the acceleration in e-commerce. Digitally native companies are on the rise and Cymbal Shops must implement significant changes in order to keep pace and maintain relevance. Today, Cymbal Shops operates 714 stores across North America and reported $15 billion in revenue in 2019. They currently employ 80,400 employees across the United States and Canada.

Cymbal Shops is a digitally transforming legacy retailer.

It is inspired by clients like: Bed Bath & Beyond, Best Buy, Home Depot, Nordstrom.

Your challenge
You work as an engineer at Cymbal Shops, a retail chain company renowned for its innovative solutions. Cymbal Shops is embarking on a significant project that involves developing a robust search functionality and virtual agent for a new application. Your task is to design a Proof of Concept (POC) solution to understand the implications and demonstrate the capabilities of integrating Vertex AI Search and Data Store Agent in the application.

Cymbal Shops' new application demands a powerful and efficient search feature, aiming to catalog and retrieve various data types, including text documents, images, and structured data using Vertex AI Search. Additionally, the company aims to create a virtual agent that can assist customers with questions about products and devices available in the Google Store, such as phones, watches, laptops, smart home devices, and other consumer devices. This virtual agent will be built and configured using Vertex AI Conversation.

Your objective is to craft a POC solution that effectively showcases the capabilities of both Vertex AI Search and Data Store Agent within the context of this application, enabling powerful search capabilities and a virtual assistant to enhance the customer experience.

Therefore in this lab, you should:

Create a website search app named App Name 1.
Create a structured data search app App Name 2.
Create an unstructured data search app App Name 3.
Create a generative chat application named Agent Name.
Enhance customer engagement and optimize performance.

Task 1: Create a Website Search App
Navigate to Vertex AI Search in the Google Cloud Console:

Go to the Google Cloud Console.

Click on the navigation menu and select "Vertex AI Search".

Create the App:

Click on “Create App”.

Enter "App Name 1" as the app name.

Choose “Search” as the app type.

Set the location to "Global".

Configure the App:

Create a datastore by clicking “Create Datastore”.

Enter "Datastore Name 1" as the datastore name.

Set the source URL to cloud.google.com/*.

Save the datastore configuration.

Preview the App:

Go to the app list, find "App Name 1", and click "Preview" to verify if it is working as intended.

Task 2: Create a Structured Data Search App
Create the App:

Navigate to Vertex AI Search.

Click on “Create App”.

Enter "App Name 2" as the app name.

Choose “Search” as the app type.

Set the location to "Global".

Configure the App:

Create a datastore by clicking “Create Datastore”.

Enter "Datastore Name 2" as the datastore name.

Set the source URL to gs://cloud-samples-data/gen-app-builder/search/kaggle_movies/movie_metadata.ndjson.

Save the datastore configuration.

Configure Search Results:

Go to the "Search Results" configuration.

Set the fields as follows:

Title: title

Thumbnail: poster_path

Text 1: tagline

Text 2: revenue

Preview the App:

Go to the app list, find "App Name 2", and click "Preview" to verify if it is working as intended.

Task 3: Create and Preview an Unstructured Data Search App
Create the App:

Navigate to Vertex AI Search.

Click on “Create App”.

Enter "App Name 3" as the app name.

Choose “Search” as the app type.

Set the location to "Global".

Configure the App:

Create a datastore by clicking “Create Datastore”.

Enter "Datastore Name 3" as the datastore name.

Set the source URL to gs://cloud-samples-data/gen-app-builder/search/alphabet-investor-pdfs.

Save the datastore configuration.

Preview the App:

Go to the app list, find "App Name 3", and click "Preview" to verify if it is working as intended.

Task 4: Create a Generative Chat Application
Enable APIs:

Go to the Google Cloud Console and enable the Dialogflow and Vertex AI Agent Builder APIs.

Create the Chat Application:

Navigate to Dialogflow CX.

Select your project and click “Create Agent”.

Enter "Agent Name" for the agent name.

Enter "Company Name" for the company name.

Create a datastore named "Datastore Name 4" with the source URL gs://cloud-samples-data/gen-app-builder/search/alphabet-investor-pdfs.

Configure the agent to use this datastore.

Test the Virtual Agent:

In Dialogflow CX, start an interactive session with the chatbot.

Type a greeting (e.g., “Hello”) and ask questions to test the responses.

Task 5: Enhance Customer Engagement and Optimize Performance
Integrate a Phone Gateway:

In Dialogflow CX, navigate to the phone gateway settings.

Create a phone gateway named "Phone Gateway Name" for the United States.

Embed a Chat Widget:

Add the following HTML snippet to your website to embed the chat widget:

html
<script src="https://www.gstatic.com/dialogflow-console/fast/messenger-cx/bootstrap.js?v=1"></script>
<df-messenger
  chat-title="Chat with us"
  agent-id="<YOUR_AGENT_ID>"
  language-code="en"
></df-messenger>
Enable Interaction Logging:

In Dialogflow CX, enable interaction logging to view conversation history and analytics.

Congratulations!
You've successfully integrated Search in applications with Vertex AI Agent Builder.
