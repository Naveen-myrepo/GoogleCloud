Overview
In a challenge lab youâ€™re given a scenario and a set of tasks. Instead of following step-by-step instructions, you will use the skills learned from the labs in the course to figure out how to complete the tasks on your own! An automated scoring system (shown on this page) will provide feedback on whether you have completed your tasks correctly.

When you take a challenge lab, you will not be taught new Google Cloud concepts. You are expected to extend your learned skills, like changing default values and reading and researching error messages to fix your own mistakes.

To score 100% you must successfully complete all tasks within the time period!

This lab is recommended for students who have enrolled in the Implement Load Balancing on Compute Engine skill badge. Are you ready for the challenge?

Topics tested
Create an instance.
Create an HTTP load balancer in front of two web servers.
Setup and requirements
Before you click the Start Lab button
Read these instructions. Labs are timed and you cannot pause them. The timer, which starts when you click Start Lab, shows how long Google Cloud resources are made available to you.

This hands-on lab lets you do the lab activities in a real cloud environment, not in a simulation or demo environment. It does so by giving you new, temporary credentials you use to sign in and access Google Cloud for the duration of the lab.

To complete this lab, you need:

Access to a standard internet browser (Chrome browser recommended).
Note: Use an Incognito (recommended) or private browser window to run this lab. This prevents conflicts between your personal account and the student account, which may cause extra charges incurred to your personal account.
Time to complete the labâ€”remember, once you start, you cannot pause a lab.
Note: Use only the student account for this lab. If you use a different Google Cloud account, you may incur charges to that account.
How to start your lab and sign in to the Google Cloud console
Click the Start Lab button. If you need to pay for the lab, a dialog opens for you to select your payment method. On the left is the Lab Details pane with the following:

The Open Google Cloud console button
Time remaining
The temporary credentials that you must use for this lab
Other information, if needed, to step through this lab
Click Open Google Cloud console (or right-click and select Open Link in Incognito Window if you are running the Chrome browser).

The lab spins up resources, and then opens another tab that shows the Sign in page.

Tip: Arrange the tabs in separate windows, side-by-side.


Important: You must use the credentials the lab provides you. Do not use your Google Cloud account credentials.
Note: Using your own Google Cloud account for this lab may incur extra charges.
Click through the subsequent pages:

Accept the terms and conditions.
Do not add recovery options or two-factor authentication (because this is a temporary account).
Do not sign up for free trials.
After a few moments, the Google Cloud console opens in this tab.

Note: To access Google Cloud products and services, click the Navigation menu or type the service or product name in the Search field. Navigation menu icon and Search field
Challenge scenario
You have started a new role as a Junior Cloud Engineer for Jooli, Inc. You are expected to help manage the infrastructure at Jooli. Common tasks include provisioning resources for projects.

You are expected to have the skills and knowledge for these tasks, so step-by-step guides are not provided.

Some Jooli, Inc. standards you should follow:

Create all resources in the default region or zone, unless otherwise directed. The default region is REGION, and the default zone is ZONE.

Naming normally uses the format team-resource; for example, an instance could be named nucleus-webserver1.

Make sure to create an instance template in global location.

Allocate cost-effective resource sizes. Projects are monitored, and excessive resource use will result in the containing project's termination (and possibly yours), so plan carefully. This is the guidance the monitoring team is willing to share: unless directed, use e2-micro for small Linux VMs, and use e2-medium for Windows or other applications, such as Kubernetes nodes.

Your challenge
As soon as you sit down at your desk and open your new laptop, you receive several requests from the Nucleus team. Read through each description, and then create the resources.

Got it! Here's the code to complete the tasks step-by-step:

### Task 1: Create a project jumphost instance
1. Open Google Cloud Console
2. Create a New VM Instance:

gcloud compute instances create instance-name \
    --zone=ZONE \
    --machine-type=e2-micro \
    --image-family=debian-10 \
    --image-project=debian-cloud

Make sure to replace `instance-name` and `ZONE` with the actual instance name and zone you will use.

### Task 2: Set up an HTTP load balancer
#### Step 1: Create an instance template

gcloud compute instance-templates create web-server-template \
    --machine-type=e2-medium \
    --metadata=startup-script='#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - ${HOSTNAME}/' /var/www/html/index.nginx-debian.html'

#### Step 2: Create a managed instance group

gcloud compute instance-groups managed create web-server-group \
    --base-instance-name=web-server \
    --template=web-server-template \
    --size=2 \
    --zone=ZONE

Make sure to replace `ZONE` with the actual zone.

#### Step 3: Create a firewall rule to allow traffic (80/tcp)

gcloud compute firewall-rules create allow-http \
    --allow tcp:80 \
    --target-tags=http-server \
    --description="Allow port 80 access to http-server"

#### Step 4: Create a health check

gcloud compute health-checks create http http-basic-check \
    --port 80

#### Step 5: Create a backend service and add instance group

gcloud compute backend-services create web-backend-service \
    --protocol=HTTP \
    --health-checks=http-basic-check \
    --global

gcloud compute backend-services add-backend web-backend-service \
    --instance-group=web-server-group \
    --instance-group-zone=ZONE \
    --global

Make sure to replace `ZONE` with the actual zone.

#### Step 6: Create a URL map and target HTTP proxy

gcloud compute url-maps create web-map-http \
    --default-service web-backend-service

gcloud compute target-http-proxies create http-lb-proxy \
    --url-map=web-map-http


#### Step 7: Create a forwarding rule

gcloud compute forwarding-rules create http-content-rule \
    --global \
    --target-http-proxy=http-lb-proxy \
    --ports=80

You might need to wait a few minutes for the load balancer to be configured and running properly. Once done, click "Check my progress" to verify the objectives. Good luck! ðŸŽ‰

Congratulations!
In this lab, you created a project jumphost instance and an HTTP load balancer.
